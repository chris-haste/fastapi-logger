name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Extract version from tag
        id: get_version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT

      - name: Verify version consistency
        run: |
          TAG_VERSION="${{ steps.get_version.outputs.tag_version }}"
          PYPROJECT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          
          echo "Tag version: $TAG_VERSION"
          echo "pyproject.toml version: $PYPROJECT_VERSION"
          
          if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ]; then
            echo "ERROR: Tag version ($TAG_VERSION) does not match pyproject.toml version ($PYPROJECT_VERSION)"
            exit 1
          fi
          
          echo "Version consistency check passed"

      - name: Build package
        run: python -m build

      - name: Verify build artifacts
        run: |
          echo "Build artifacts:"
          ls -la dist/
          
          # Verify both wheel and sdist were created
          if [ ! -f dist/*.whl ]; then
            echo "ERROR: No wheel file found"
            exit 1
          fi
          
          if [ ! -f dist/*.tar.gz ]; then
            echo "ERROR: No source distribution found"
            exit 1
          fi
          
          echo "Build verification passed"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true 