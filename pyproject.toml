[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fapilog"
version = "0.1.0"
description = "FastAPI logging middleware with structured logging and multiple sinks"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "FastAPI Logger Contributors", email = "contributors@fapilog.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
]
requires-python = ">=3.8"
dependencies = [
    "structlog",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "anyio",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pytest-cov>=4.0.0",
    "hatch>=1.0.0",
    "fastapi>=0.100.0",
    "httpx>=0.27.0",
]
loki = [
    "httpx>=0.27.0",
]
fastapi = [
    "fastapi>=0.100.0",
    "httpx>=0.27.0",
]
metrics = [
    "psutil>=5.9",
]

[project.urls]
Homepage = "https://github.com/fapilog/fapilog"
Repository = "https://github.com/fapilog/fapilog"
Documentation = "https://fapilog.readthedocs.io"
Bug-Tracker = "https://github.com/fapilog/fapilog/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/fapilog"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "ruff",
    "mypy",
    "pytest-cov",
]

[tool.hatch.envs.lint]
dependencies = [
    "ruff>=0.1.0",
]
scripts = { lint = "ruff check .", format = "ruff format ." }

[tool.hatch.envs.typecheck]
dependencies = [
    "mypy>=1.0.0",
]
scripts = { typecheck = "mypy src/ tests/" }

[tool.hatch.envs.test]
dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio==0.23.6",
    "pytest-cov>=4.0.0",
    "fastapi>=0.100.0",
    "httpx>=0.27.0",
]
default-script = "test"

[tool.hatch.envs.test.scripts]
test = "pytest tests/ --cov=src/fapilog --cov-report=term-missing --cov-fail-under=90"
test-cov = "pytest tests/ --cov=src/fapilog --cov-report=term-missing"
test-queue-load = "python scripts/load_test_log_queue.py"

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"examples/*" = ["B904"]

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true
disable_error_code = ["misc", "arg-type", "assignment", "var-annotated", "union-attr"]

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/fapilog",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "asyncio: marks tests as asyncio tests",
]
